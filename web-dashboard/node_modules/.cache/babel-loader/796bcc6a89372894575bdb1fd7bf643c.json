{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { authApi } from '../services/api';\nimport toast from 'react-hot-toast';\nconst useAuth = () => {\n  _s();\n  const [authState, setAuthState] = useState({\n    user: null,\n    token: localStorage.getItem('auth_token'),\n    isAuthenticated: false,\n    isLoading: true\n  });\n\n  // Verifica token esistente all'avvio\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('auth_token');\n      if (!token) {\n        setAuthState(prev => ({\n          ...prev,\n          isLoading: false\n        }));\n        return;\n      }\n      try {\n        const user = await authApi.verifyToken(token);\n        setAuthState({\n          user,\n          token,\n          isAuthenticated: true,\n          isLoading: false\n        });\n      } catch (error) {\n        // Token invalido, rimuovilo\n        localStorage.removeItem('auth_token');\n        setAuthState({\n          user: null,\n          token: null,\n          isAuthenticated: false,\n          isLoading: false\n        });\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = useCallback(async (email, password) => {\n    setAuthState(prev => ({\n      ...prev,\n      isLoading: true\n    }));\n    try {\n      const {\n        user,\n        token\n      } = await authApi.login(email, password);\n      localStorage.setItem('auth_token', token);\n      setAuthState({\n        user,\n        token,\n        isAuthenticated: true,\n        isLoading: false\n      });\n      toast.success(`Benvenuto, ${user.displayName}!`);\n      return true;\n    } catch (error) {\n      setAuthState(prev => ({\n        ...prev,\n        isLoading: false,\n        user: null,\n        token: null,\n        isAuthenticated: false\n      }));\n      const message = error instanceof Error ? error.message : 'Errore durante il login';\n      toast.error(message);\n      return false;\n    }\n  }, []);\n  const logout = useCallback(() => {\n    localStorage.removeItem('auth_token');\n    setAuthState({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      isLoading: false\n    });\n    toast.success('Logout effettuato');\n  }, []);\n  const refreshToken = useCallback(async () => {\n    const currentToken = authState.token || localStorage.getItem('auth_token');\n    if (!currentToken) {\n      return false;\n    }\n    try {\n      const {\n        user,\n        token\n      } = await authApi.refreshToken(currentToken);\n      localStorage.setItem('auth_token', token);\n      setAuthState(prev => ({\n        ...prev,\n        user,\n        token,\n        isAuthenticated: true\n      }));\n      return true;\n    } catch (error) {\n      logout();\n      return false;\n    }\n  }, [authState.token, logout]);\n  const hasPermission = useCallback(permission => {\n    if (!authState.user) return false;\n\n    // Super admin ha tutti i permessi\n    if (authState.user.role === 'super-admin') return true;\n    return authState.user.permissions.includes(permission);\n  }, [authState.user]);\n  const hasRole = useCallback(role => {\n    if (!authState.user) return false;\n\n    // Gerarchia ruoli: super-admin > admin > viewer\n    const roleHierarchy = ['viewer', 'admin', 'super-admin'];\n    const userRoleIndex = roleHierarchy.indexOf(authState.user.role);\n    const requiredRoleIndex = roleHierarchy.indexOf(role);\n    return userRoleIndex >= requiredRoleIndex;\n  }, [authState.user]);\n\n  // Auto-refresh token ogni 15 minuti\n  useEffect(() => {\n    if (!authState.isAuthenticated || !authState.token) return;\n    const refreshInterval = setInterval(() => {\n      refreshToken();\n    }, 15 * 60 * 1000); // 15 minuti\n\n    return () => clearInterval(refreshInterval);\n  }, [authState.isAuthenticated, authState.token, refreshToken]);\n  return {\n    ...authState,\n    login,\n    logout,\n    refreshToken,\n    hasPermission,\n    hasRole\n  };\n};\n_s(useAuth, \"dhKz+wI8ipFGnQiUCeMubfmK1pY=\");\nexport default useAuth;","map":{"version":3,"names":["useState","useEffect","useCallback","authApi","toast","useAuth","_s","authState","setAuthState","user","token","localStorage","getItem","isAuthenticated","isLoading","initializeAuth","prev","verifyToken","error","removeItem","login","email","password","setItem","success","displayName","message","Error","logout","refreshToken","currentToken","hasPermission","permission","role","permissions","includes","hasRole","roleHierarchy","userRoleIndex","indexOf","requiredRoleIndex","refreshInterval","setInterval","clearInterval"],"sources":["/Users/samuelebelfiore/Downloads/discord-bot-main/web-dashboard/src/hooks/useAuth.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { User, AuthState } from '../types';\nimport { authApi } from '../services/api';\nimport toast from 'react-hot-toast';\n\ninterface AuthHook extends AuthState {\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  refreshToken: () => Promise<boolean>;\n  hasPermission: (permission: string) => boolean;\n  hasRole: (role: string) => boolean;\n}\n\nconst useAuth = (): AuthHook => {\n  const [authState, setAuthState] = useState<AuthState>({\n    user: null,\n    token: localStorage.getItem('auth_token'),\n    isAuthenticated: false,\n    isLoading: true,\n  });\n\n  // Verifica token esistente all'avvio\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('auth_token');\n      \n      if (!token) {\n        setAuthState(prev => ({ ...prev, isLoading: false }));\n        return;\n      }\n\n      try {\n        const user = await authApi.verifyToken(token);\n        setAuthState({\n          user,\n          token,\n          isAuthenticated: true,\n          isLoading: false,\n        });\n      } catch (error) {\n        // Token invalido, rimuovilo\n        localStorage.removeItem('auth_token');\n        setAuthState({\n          user: null,\n          token: null,\n          isAuthenticated: false,\n          isLoading: false,\n        });\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = useCallback(async (email: string, password: string): Promise<boolean> => {\n    setAuthState(prev => ({ ...prev, isLoading: true }));\n    \n    try {\n      const { user, token } = await authApi.login(email, password);\n      \n      localStorage.setItem('auth_token', token);\n      setAuthState({\n        user,\n        token,\n        isAuthenticated: true,\n        isLoading: false,\n      });\n      \n      toast.success(`Benvenuto, ${user.displayName}!`);\n      return true;\n    } catch (error) {\n      setAuthState(prev => ({ \n        ...prev, \n        isLoading: false,\n        user: null,\n        token: null,\n        isAuthenticated: false \n      }));\n      \n      const message = error instanceof Error ? error.message : 'Errore durante il login';\n      toast.error(message);\n      return false;\n    }\n  }, []);\n\n  const logout = useCallback(() => {\n    localStorage.removeItem('auth_token');\n    setAuthState({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      isLoading: false,\n    });\n    toast.success('Logout effettuato');\n  }, []);\n\n  const refreshToken = useCallback(async (): Promise<boolean> => {\n    const currentToken = authState.token || localStorage.getItem('auth_token');\n    \n    if (!currentToken) {\n      return false;\n    }\n\n    try {\n      const { user, token } = await authApi.refreshToken(currentToken);\n      \n      localStorage.setItem('auth_token', token);\n      setAuthState(prev => ({\n        ...prev,\n        user,\n        token,\n        isAuthenticated: true,\n      }));\n      \n      return true;\n    } catch (error) {\n      logout();\n      return false;\n    }\n  }, [authState.token, logout]);\n\n  const hasPermission = useCallback((permission: string): boolean => {\n    if (!authState.user) return false;\n    \n    // Super admin ha tutti i permessi\n    if (authState.user.role === 'super-admin') return true;\n    \n    return authState.user.permissions.includes(permission);\n  }, [authState.user]);\n\n  const hasRole = useCallback((role: string): boolean => {\n    if (!authState.user) return false;\n    \n    // Gerarchia ruoli: super-admin > admin > viewer\n    const roleHierarchy = ['viewer', 'admin', 'super-admin'];\n    const userRoleIndex = roleHierarchy.indexOf(authState.user.role);\n    const requiredRoleIndex = roleHierarchy.indexOf(role);\n    \n    return userRoleIndex >= requiredRoleIndex;\n  }, [authState.user]);\n\n  // Auto-refresh token ogni 15 minuti\n  useEffect(() => {\n    if (!authState.isAuthenticated || !authState.token) return;\n\n    const refreshInterval = setInterval(() => {\n      refreshToken();\n    }, 15 * 60 * 1000); // 15 minuti\n\n    return () => clearInterval(refreshInterval);\n  }, [authState.isAuthenticated, authState.token, refreshToken]);\n\n  return {\n    ...authState,\n    login,\n    logout,\n    refreshToken,\n    hasPermission,\n    hasRole,\n  };\n};\n\nexport default useAuth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}