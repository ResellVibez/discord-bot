{"ast":null,"code":"var _jsxFileName = \"/Users/samuelebelfiore/Downloads/discord-bot-main/web-dashboard/src/components/LoadingSpinner.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  size = 'md',\n  color = 'primary',\n  text\n}) => {\n  const getSizeClasses = size => {\n    switch (size) {\n      case 'sm':\n        return 'w-4 h-4';\n      case 'md':\n        return 'w-6 h-6';\n      case 'lg':\n        return 'w-8 h-8';\n      case 'xl':\n        return 'w-12 h-12';\n      case 'large':\n        return 'w-16 h-16';\n      default:\n        return 'w-6 h-6';\n    }\n  };\n  const getColorClasses = color => {\n    switch (color) {\n      case 'primary':\n        return 'border-primary-500 border-r-transparent';\n      case 'white':\n        return 'border-white border-r-transparent';\n      case 'gray':\n        return 'border-gray-400 border-r-transparent';\n      default:\n        return 'border-primary-500 border-r-transparent';\n    }\n  };\n  const spinnerClasses = `\n    loading-spinner\n    ${getSizeClasses(size)}\n    ${getColorClasses(color)}\n    border-2\n  `;\n  if (text) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center space-y-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: spinnerClasses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 dark:text-gray-400 animate-pulse\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: spinnerClasses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoadingSpinner","size","color","text","getSizeClasses","getColorClasses","spinnerClasses","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samuelebelfiore/Downloads/discord-bot-main/web-dashboard/src/components/LoadingSpinner.tsx"],"sourcesContent":["import React from 'react';\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'large';\n  color?: 'primary' | 'white' | 'gray';\n  text?: string;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \n  size = 'md', \n  color = 'primary',\n  text\n}) => {\n  const getSizeClasses = (size: string) => {\n    switch (size) {\n      case 'sm':\n        return 'w-4 h-4';\n      case 'md':\n        return 'w-6 h-6';\n      case 'lg':\n        return 'w-8 h-8';\n      case 'xl':\n        return 'w-12 h-12';\n      case 'large':\n        return 'w-16 h-16';\n      default:\n        return 'w-6 h-6';\n    }\n  };\n\n  const getColorClasses = (color: string) => {\n    switch (color) {\n      case 'primary':\n        return 'border-primary-500 border-r-transparent';\n      case 'white':\n        return 'border-white border-r-transparent';\n      case 'gray':\n        return 'border-gray-400 border-r-transparent';\n      default:\n        return 'border-primary-500 border-r-transparent';\n    }\n  };\n\n  const spinnerClasses = `\n    loading-spinner\n    ${getSizeClasses(size)}\n    ${getColorClasses(color)}\n    border-2\n  `;\n\n  if (text) {\n    return (\n      <div className=\"flex flex-col items-center space-y-3\">\n        <div className={spinnerClasses} />\n        <p className=\"text-sm text-gray-600 dark:text-gray-400 animate-pulse\">\n          {text}\n        </p>\n      </div>\n    );\n  }\n\n  return <div className={spinnerClasses} />;\n};\n\nexport default LoadingSpinner;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B,MAAMC,cAA6C,GAAGA,CAAC;EACrDC,IAAI,GAAG,IAAI;EACXC,KAAK,GAAG,SAAS;EACjBC;AACF,CAAC,KAAK;EACJ,MAAMC,cAAc,GAAIH,IAAY,IAAK;IACvC,QAAQA,IAAI;MACV,KAAK,IAAI;QACP,OAAO,SAAS;MAClB,KAAK,IAAI;QACP,OAAO,SAAS;MAClB,KAAK,IAAI;QACP,OAAO,SAAS;MAClB,KAAK,IAAI;QACP,OAAO,WAAW;MACpB,KAAK,OAAO;QACV,OAAO,WAAW;MACpB;QACE,OAAO,SAAS;IACpB;EACF,CAAC;EAED,MAAMI,eAAe,GAAIH,KAAa,IAAK;IACzC,QAAQA,KAAK;MACX,KAAK,SAAS;QACZ,OAAO,yCAAyC;MAClD,KAAK,OAAO;QACV,OAAO,mCAAmC;MAC5C,KAAK,MAAM;QACT,OAAO,sCAAsC;MAC/C;QACE,OAAO,yCAAyC;IACpD;EACF,CAAC;EAED,MAAMI,cAAc,GAAG;AACzB;AACA,MAAMF,cAAc,CAACH,IAAI,CAAC;AAC1B,MAAMI,eAAe,CAACH,KAAK,CAAC;AAC5B;AACA,GAAG;EAED,IAAIC,IAAI,EAAE;IACR,oBACEJ,OAAA;MAAKQ,SAAS,EAAC,sCAAsC;MAAAC,QAAA,gBACnDT,OAAA;QAAKQ,SAAS,EAAED;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClCb,OAAA;QAAGQ,SAAS,EAAC,wDAAwD;QAAAC,QAAA,EAClEL;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEV;EAEA,oBAAOb,OAAA;IAAKQ,SAAS,EAAED;EAAe;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C,CAAC;AAACC,EAAA,GAtDIb,cAA6C;AAwDnD,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}